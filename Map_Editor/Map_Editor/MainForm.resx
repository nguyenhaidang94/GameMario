<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_pbLand.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALEwAACxMBAJqcGAAACr9JREFUeF7lma+TI8kR
        hRsYHHIIDjAQODCxSMghsEDIISjYYSRgICgo5BAUlJmgoKCgoIgjBAcOHHjw/oP2+7Iyu0s1PZ69nT6k
        2XhR3fXjZebLrO5Sb9U0zUOjt/OR0Nv5SOjtfCT0dj4SejsfCb2dj4TezkdCb+cjobfzkdDb+Ujo7Xwk
        9HY+Eno7Hwm9nY+E3s5HQm/nI6H376+j0V++/X3y6/d//uNf3/Vvvpn8Z3F6buoc5wLetwSX1H40p1z/
        bm7P+B0G5PeQ058FvfmuYMcNAS/yRYIZBteJ4O0lA/c3h80pkM+N+X1z+vpBcA/Ib4H/bTwefVeW5woc
        EPhCAS4ULKgD6jPIgUBL5vert1mzfps3q9dps3yZpjk5svmxpn5xrh7E+FJYiXfz22JQfsv6XNlOUPAK
        dPUyF/lMi6YmRARO3+a3Wg4s5MDMnDIDkMmhze91s/19KaSW+9LZFgQkDgLqgoIzzWVNiMl4cKZ2OP5q
        cdHC60yBK1iVB8GD9StBhhATd6ROkOEkhMYhEnE4FUYQKQRJ87vMMWdtQRFQjjTvPuAE+vAHX4bkbwVY
        3nBcBq7cQyIRZCRAwCuJgSAYMjInDAMYnp/TNqJiuM/HWwfcOFjLjs3LAgoYv/otEarGxP00KH81P6q8
        JcLyNrcqYCvwDEAQFocABF9rb7FFcCYqIshwkrHZ8amZ7nHySffjlC2NJUe7+Sao+nPOCCiqi3v64YEv
        uIfkr6YHkZ+1Zzz42QFDPAsoNbLdBR/ZLUWgJSM4hXPPm5G1M7KlNazFWMxPzsEpewTm83je2P7Enkrd
        Aj+ncYKf7EfGPSR/NdlBnh6CUwVvCiOClRnPhC74cOROBFQWWYzj3GTlTpqYbrzNQlLeOJ2vnad7nEqB
        d/YYn+xGzXjzSzNZDstfPW9dTVXCVAqjMsZYNOf9XwSfKuTeKK1lX2NTObfbTprxSs46T2tca+BLnKnf
        bBbzWsdt3INfa56C360ng/JXljFVgRlyAUyUWCARyDjXIMiMCBEofbXcMzZfPTXHnZ4p63GvkzbXyxqb
        2LLgmEci3A5rzB8bT5nfbybNYTsdlL+CnElMCCRRRk7aBZ8TxpiVk4xxT/9yNTYHcXQmMVrj7qRVEs7h
        ALYoZwVnQTJPNoCNYYsgybwHHwIMxV9hIAKOzmdNZkFLKrSEmvvEGs3DUGQfUvq3cvS0n5mDewHjwc+c
        4EN9bJBJgsudzO2UmT+Le0h+EyAGLHgNcB/lZYQKHnLLiMaelgn0R/Yp1af6F3Puepw3p11ycrN+bsaa
        a07KKYRsuQhO+znmwWm2lVXjV4bz4C+HeXM7LQblTwIIELTBuwDACIVQjT4WE+yziKzkND5mvQziHE7i
        bGSKbWE25BROwoUNskNgUdJrdxLwLKEvELwv58Wg/K0ABgWUB89EyHiSpuynsjESBKj10EMcjTMfRa+F
        k2F8qjHmwGNiSyz6KWmCo+V+JScJiOuDsnfSenjgBMwdkr8VIAIjCN6zoRQIUpvnwQNUXG7GNk4/it8O
        clKO3dxpjJOptA8ROdlbaS79kdXrqcsoIDCcvnjANsd5h+Sv5nOVjDJp+0jYLJ+bzeq5WUuleqk3wFJb
        QIJMiuyPBJTkvWxjumefXfdycOfw67P2KwajBMnOUU7kmQUEi1Psb64JjmDPW2Ux5x2Qv1pMR009Uybn
        T029GDfretxsJQDYiZAAeRDR1gqYp3IIsJVYu6VOixKKvuNGexWnApmTp43UX+vQJEHJDo5EdgIWsDJ1
        yTkKno/6f5a/qqcKXgIgwmo+bja1si8hCG7lrQW6kggKdudBb4W999GCizJ1kTMA8tteRsOYO8m6w0rZ
        8f5orbT9+l2gWf/Q/FYBCEDwgOARIYKzYHUf2UaIo5TGCQxG8KfIvvpvYSiQGWQNaPs+md+HIfklAOWv
        /a7WMu/BU04hQgo+9UfwgL0Z88g+xKXxyFb0xdpw4G5+Nu+je1sbfWq/yl9F6YMIniAJzAJUOUWZQ5aX
        OSDz9PP0fznVHY619fUZjft3mSmQj/9Z/NVKDz2e/GvK3AXIReDBBk4ReCbAVXvwJkdez8vm9bpq3oTX
        y3vgcOus47Ltru+QBRNBG8cl2Si5bewL/NWSJz/lrSDBAWQVgBBnZZhrYMFr8YuCJuAXOXCRCCf1HfV6
        2WvOgXW6po+xdq7a3FkeYpalcKoQ9e26tqCvwS/ef6+n/x2Sv5pNRs1C2yBEOGrSWZMNXDsuIgVh7HJc
        mAOs4RVpr01hz2tTFWRvDaB7HD5j+KQsSjCrFHf2VaCc7Vp9Nn5b63VVmw/Bn/io0FSlQ/FXcxeg1jmA
        atiIdK+MJ3WlpCbaZAUfwGAEjUNbnQMOanlQHnR2MOge5A6HwGTtJmfgxSGyTInTh02rJAJnjaHjGprf
        BKjbV6EgEQDPhS3E2gIpC1O7t36qJRy6g+abCLyLwf0crsliOIuQUc60e7cRmc55DVTCwPxJgFknAK/C
        dBZIh6AIuHsVls6B5FzraH6ft3n2dH/nsCH4AOu81dyjrXcEX9n+BL8LUByEXIAdiMB7BEht7kAG7zfH
        83G7zh0pkc/ztuzL+r/K3woQp8EQYEsFuAAEzzVtJ0BGlCMcyYzcjeVz4PH2HW87p7zmDZXfe5tft+Of
        89tRmNNgnAQJPm0Bgk5ZDxESSZQTxN62hN0r9B7dHLhahzOQybtseht20vrgGo7fToKxBQgccF0KwF5i
        0Z0A7sCRk6CevG8cVgCvG4FXD2cGDlI2zxFO5Y6YcwHnbk+kerLf9PQO3iH5q/aJr+MuQRM8gb8TwI/D
        0UJw1Ssxgs5/cnY/QXkNpfcvAhGIrfX1CVwX0DhB8f5+4zWW8d/j6/ytALzX+VDAacteFwqUp2cEzzWE
        HIkJ/FXGb3Ki/M39EZiPWGQNR/n90DmZQF/Ktgfl3Df9hi/5Svwsf1cB7O+NlNlqooTga4r9llawgEWQ
        o3rnmIADPyhCgHU4jBMAxwP0M4fMRuD3VfU5/gi//xhS2UsAqgAREACcDxJCxk0MvqYILIpPTeFYCNKH
        V8FEKlCu6ePo5S36vspf8Sls7QIQvFXBTlWw53ydRKAlaFr7rOSAJNqSGPD56SNHYg4Zieuy1Ansz+b3
        LSABdHgg+PhqahUQAgiIgggWvBsOINYdcWasL4CoIKqKlvkfBUqLH2X/UPz6OfzUboEQwCogBPCsQxoC
        YDxIA+EsLWXZGekM5/MCydm0L0uU3IEh+T8XgOcAwbszyUgyBLhvCRFI4ANkfLfPQcmVDn6GfH/bh82B
        +SuOwPYpPNsCIYA9B2SoFCBtAb/2gwgfHtJXogx+H85+5lwerN0jsNYGDx9k2o8bA/EnAXgOcOihCvQm
        yCvg0lMBGG2DzR3K0dPPl5qPMoeocNs9QedrnetO4IH47S0Qx2AOPZykAAcexKAF/O8LDsS3wchGmxXH
        uyooEPNbJ2iF9p6xbH700Ybtu7ECf5S//Sqcjr1+zPVTH6VtpyeRggg8roPEHIz7sj+uBQy3W6UYM/T1
        BX5g/s/wJwGUfUToBEhHR/uRoWurAEdkoRWgIGXNu/4ewwE4f3QuGJq/+vZt8ivfBAz20zh9H4j/Movv
        BCC2C4hfjvH8SM+Q9MnM4H18bs/nfgSb+3/6uCY58ZVqGP7n5n8SIREK/uONzAAAAABJRU5ErkJggg==
</value>
  </data>
</root>